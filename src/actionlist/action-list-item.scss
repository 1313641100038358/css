// waiting on https://github.com/primer/primitives/pull/256 for these primitives
$actionList-item-hover-bg: #f0f3f5;
$actionList-item-active-bg: #e8ebed;
$actionList-item-selected-bg: #f0f3f5;
$actionList-item-focus-bg: #e0e4e7;
$actionList-item-divider: #e9e9ed;

$actionList-item-danger-hover-bg: #fff0f2;
$actionList-item-danger-active-bg: #ffebed;
$actionList-item-danger-focus-bg: #ffdbe0;

// expanded from src/support/variables/layout.scss
// adds 12px to the scale as of https://github.com/github/design-systems/issues/992
//
// https://github.com/github/design-systems/issues/1272

$s-20: 20px;
$s-28: 28px;

// CSS Easing

$ease-out-expo: cubic-bezier(0.16, 1, 0.3, 1);
$ease-out-cubic: cubic-bezier(0.33, 1, 0.68, 1);
$ease-out-quart: cubic-bezier(0.25, 1, 0.5, 1);
// $actionList-item-padding-vertical: (($spacer-5 - $s-20) / 2); hmmmmm
$actionList-item-padding-vertical: 6px;
$actionList-item-padding-horizontal: $spacer-2;
$actionList-item-bg-transition: background 33.333ms linear; // 2 frames on a 60hz monitor
$actionList-item-checkmark-transition-timing: 50ms;

@mixin pseudoBackground {
  content: '';
  position: absolute;
  height: 32px;
  position: absolute;
  width: 100%;
  border-radius: $border-radius-2;
  z-index: -1;
}

// <li>
.ActionList-item {
  list-style: none;
  position: relative;
  border-radius: $border-radius-2;

  &:hover,
  &:active {
    cursor: pointer;

    // a href
    .ActionList-item-content {
      text-decoration: none;
    }
  }

  // only hover li without list as children
  &:not(.ActionList-item--has-sub-item) {
    &:hover {
      background-color: $actionList-item-hover-bg;
      cursor: pointer;
    }

    &:active {
      background: $actionList-item-active-bg;

      @media screen and (prefers-reduced-motion: no-preference) {
        animation: ActionList-item-active-bg 4s forwards $ease-out-cubic;
      }

      @keyframes ActionList-item-active-bg {
        0% {
        }
        50% {
          transform: scale(1);
          box-shadow: inset 0 0 0 rgba(#000, 0.04);
        }
        100% {
          transform: scale(0.97);
          box-shadow: inset 0 3px 9px rgba(#000, 0.04);
        }
      }
    }

    &:hover,
    &:active {
      // hide dividers
      .ActionList-item-label:before,
      + .ActionList-item .ActionList-item-label:before {
        visibility: hidden;
      }
    }
  }

  // target contents of li if sub-item
  // has-sub-item will never be :active
  // collapse styles here
  &.ActionList-item--has-sub-item {
    // first child
    > .ActionList-item-content {
      &:hover {
        background-color: $actionList-item-hover-bg;
      }
    }
  }

  .ActionList-item--sub-group {
  }

  // active state [aria-current]

  &.ActionList-item--nav-active:not(.ActionList-item--danger) {
    background: $actionList-item-selected-bg;
    &:before,
    + .ActionList-item:before {
      visibility: hidden;
    }

    // blue accent line
    &:after {
      content: '';
      width: $spacer-1;
      height: $spacer-4;
      border-radius: $border-radius-1;
      position: absolute;
      left: -$actionList-item-padding-horizontal;
      top: calc(50% - (24px / 2));
      background: var(--color-accent-fg);
    }
  }

  // collapsible item [aria-expanded]

  &[aria-expanded='true'] {
    .ActionList-item-content--collapseIcon {
      transform: rotate(0deg);
      transition: transform linear $actionList-item-checkmark-transition-timing;
    }

    .ActionList-item--sub-group {
      display: block;
    }
  }

  &[aria-expanded='false'] {
    .ActionList-item-content--collapseIcon {
      transform: rotate(180deg);
      transition: transform linear $actionList-item-checkmark-transition-timing;
    }

    .ActionList-item--sub-group {
      display: none;
    }
  }

  // variants

  &.ActionList-item--danger {
    .ActionList-item-label {
      color: var(--color-danger-fg);
    }

    @media (hover: hover) and (pointer: fine) {
      &:hover {
        background: var(--color-danger-subtle);
      }
    }

    &:active {
      background: var(--color-danger-subtle);
    }
  }

  // if nested list exists, remove default padding
  .ActionList {
    padding: unset;
  }
}

// span or a href
.ActionList-item-content {
  display: grid;
  padding: $actionList-item-padding-vertical $actionList-item-padding-horizontal;
  grid-template-rows: minmax(20px, max-content); // 20px + 12px padding [32]
  //   grid-template-columns: minmax(min-content, 100%); // default one column
  grid-template-areas: 'leadingAction leadingVisual label trailingVisual trailingAction';
  grid-template-columns: min-content min-content minmax(min-content, auto) min-content min-content;
  //   column-gap: $spacer-2;
  align-items: center;
  position: relative;
  border-radius: $border-radius-2;
  font-weight: $font-weight-normal;
  color: var(--color-fg-default);
  user-select: none;
  transition: $actionList-item-bg-transition;

  // column-gap persists with empty grid-areas, margin applies when children exist
  & > :not(:last-child) {
    margin-right: $spacer-2;
  }

  //   & > :not(.ActionList-item-action--leading):before {
  //     grid-area: leadingAction;
  //     content: '';
  //     position: absolute;
  //     width: 16px;
  //     height: 16px;

  //     background-color: deeppink;
  //   }

  //   :where(.ActionList-item-action--leading) {
  //     background-color: deeppink;
  //     width: 16px;
  //   }

  //   .ActionList-item-action--leading:empty() {
  //       width: 26px
  //   }

  //   & > a:before {
  //     grid-area: leadingAction;
  //     content: '';
  //     position: absolute;
  //     height: 32px;
  //     position: absolute;
  //     width: 16px;
  //     border-radius: $border-radius-2;
  //     z-index: -1;
  //   }

  &:focus-visible {
    outline: none;
    box-shadow: 0 0 0 2px var(--color-accent-fg); // this color breaks convention
    position: relative;
    z-index: 1;
  }

  // sizes

  &.ActionList-item-content--sizeMedium {
    grid-template-rows: minmax(28px, max-content); // 28px + 12px padding [40]
  }

  &.ActionList-item-content--sizeLarge {
    grid-template-rows: minmax(36px, max-content); // 36px + 12px padding [48]
  }

  // On pointer:coarse (mobile), all list items are large
  @media (pointer: coarse) {
    grid-template-rows: minmax(36px, max-content);
  }

  // children grid definitions

  &.ActionList-item-content--blockDescription {
    // if leading/trailing visual, align with first line of content
    .ActionList-item-visual {
      place-self: start;
    }
  }

  // collapsible no visual
  &.ActionList-item-content--collapsible {
    // grid-template-columns: min-content minmax(min-content, auto);

    // leading visual
    &.ActionList-item-content--leadingVisual {
      //   grid-template-columns: min-content min-content minmax(min-content, auto);
    }

    // trailing visual
    &.ActionList-item-content--trailingVisual {
      //   grid-template-columns: min-content minmax(min-content, auto) min-content;
    }

    // leading + trailing visuals
    &.ActionList-item-content--leadingVisual.ActionList-item-content--trailingVisual {
      //   grid-template-columns: min-content min-content minmax(min-content, auto) min-content;
    }
  }

  // leading visual
  &.ActionList-item-content--leadingVisual {
    // grid-template-columns: min-content minmax(min-content, auto);
  }

  // trailing visual
  &.ActionList-item-content--trailingVisual {
    // grid-template-columns: minmax(min-content, auto) min-content;
  }

  // leading + trailing visuals
  &.ActionList-item-content--leadingVisual.ActionList-item-content--trailingVisual {
    // grid-template-columns: min-content minmax(min-content, auto) min-content;
  }

  // checkmark
  &.ActionList-item-content--singleSelect,
  &.ActionList-item-content--multiSelect {
    // grid-template-columns: min-content minmax(min-content, auto);

    // checkmark + leading visual
    &.ActionList-item-content--leadingVisual {
      //   grid-template-columns: min-content min-content minmax(min-content, auto);
    }

    // checkmark + trailing visual
    &.ActionList-item-content--trailingVisual {
      //   grid-template-columns: min-content minmax(min-content, auto) min-content;
    }

    // checkmark + leading * trailing visuals
    &.ActionList-item-content--leadingVisual.ActionList-item-content--trailingVisual {
      //   grid-template-columns: min-content min-content minmax(min-content, auto) min-content;
    }
  }

  // TODO: better organize these for nesting
  // wrapper span
  .ActionList-item-label--blockDescription,
  .ActionList-item-label--inlineDescription {
    grid-area: label;
    display: flex;

    .ActionList-item-label {
      font-weight: $font-weight-bold;
    }
  }

  // block
  .ActionList-item-label--blockDescription {
    flex-direction: column;

    .ActionList-item-description {
      margin-top: $spacer-1;
    }
  }

  // inline
  .ActionList-item-label--inlineDescription {
    flex-direction: row;
    align-items: baseline;

    .ActionList-item-description {
      margin-left: $actionList-item-padding-horizontal;
    }
  }

  // description
  .ActionList-item-description {
    font-size: $font-size-small;
    line-height: $lh-default;
    color: var(--color-fg-muted);
  }
}

// helper for grid alignment with multi-line content
// span wrapping svg or text
.ActionList-item-visual,
.ActionList-item-action {
  min-height: 20px;
  display: flex;
  align-items: center;
  fill: var(--color-fg-muted);
  color: var(--color-fg-muted); // if visual is text
}

.ActionList-item-action--trailing {
  grid-area: trailingAction;
}

.ActionList-item-visual--leading {
  grid-area: leadingVisual;
}

.ActionList-item-visual--trailing {
  grid-area: trailingVisual;
}

// text
.ActionList-item-label {
  grid-area: label;
  font-weight: $font-weight-normal;
  color: var(--color-fg-default);
  position: relative; // for pseudo dividers
}

// nested groups

.ActionList-item--has-sub-item {
  > .ActionList-item-content > .ActionList-item-label {
    font-weight: $font-weight-bold;
  }
}

.ActionList-item--sub-item > .ActionList-item-content {
  font-size: $font-size-small;
}

// target ActionList-item--sub-item for padding-left to maintain :active :after state

// no leading visual

// 1 level nested
.ActionList-item--sub-group {
  .ActionList-item--sub-item {
    padding-left: 16px;
  }
}

// has 16px leading visual

// 1 level nested
.ActionList-item-visual--16 + .ActionList-item--sub-group {
  .ActionList-item--sub-item {
    padding-left: 24px;
  }
}

// has 20px leading visual

.ActionList-item-visual--20 + .ActionList-item--sub-group {
  .ActionList-item--sub-item {
    padding-left: 28px;
  }
}

// has 24px leading visual

.ActionList-item-visual--24 + .ActionList-item--sub-group {
  .ActionList-item--sub-item {
    padding-left: 32px;
  }
}
// single select

// maintain space on grid while check is hidden
// .ActionList-item-content--singleSelect {
//   .ActionList-item-check {
//     visibility: hidden;
//     opacity: 0;
//     transition: visibility 0s linear $actionList-item-checkmark-transition-timing,
//       opacity $actionList-item-checkmark-transition-timing;
//   }
// }

// &[aria-checked='true'] {
//   .ActionList-item-content--singleSelect {
//     .ActionList-item-check {
//       visibility: visible;
//       opacity: 1;
//       transition: visibility 0s linear 0s, opacity $actionList-item-checkmark-transition-timing;
//     }
//   }
// }
