// stylelint-disable max-nesting-depth
// stylelint-disable selector-max-specificity
// stylelint-disable no-duplicate-selectors

.AppFrame {

  // Accessibility navigation

  .AppFrame-a11yNav {
    position: absolute;
    padding: var(--base-size-16) var(--base-size-16) var(--base-size-8);
    top: calc(var(--base-size-128) * -1);
    left: 0;
    background: #F6F8FA; /* fixme */
    z-index: 1000;
    width: 100%;

    ul, li {
      list-style: none;
      margin: 0;
      padding: 0;
    }

    ul {
      display: flex;
      align-items: center;
      gap: var(--base-size-8);
    }

    &:focus-within {
      top: 0;

      // Narrow viewport
      @media (max-width: #{map-get($breakpoints, 'md') - 0.02px}) {
        ul {
          justify-content: center;
        }
      }
    }
  }

  .AppFrame-a11yLink {
    transition: none;

    &:not(:focus) {
      width: var(--base-size-8);
      height: var(--base-size-8);
      display: block;
      overflow: hidden;
      text-indent: var(--base-size-128);
      border-radius: 100%;
      background: var(--color-border-default);
      pointer-events: none;
    }

    &:focus {
      display: grid;
      z-index: 20;
      width: auto;
      height: auto;
      overflow: auto;
      border-radius: var(--base-size-24);
      min-height: var(--base-size-32);
      align-items: center;
      padding: 0 var(--base-size-16);
      background: var(--color-accent-fg);
      color: var(--color-fg-on-emphasis);

      @media (pointer: coarse) {
        &:after {
          // pull from minTouchTarget design token
          @include minTouchTarget(var(--primer-control-minTarget-coarse));
        }
      }

      @media (prefers-reduced-motion: no-preference) {
        animation: AppFrame-a11yLink-focus 200ms ease-out;
      }

      @keyframes AppFrame-a11yLink-focus {
        0% {
          transform: scale(0.3, 0.25);
          color: var(--color-accent-fg);
        }
        50% {
          transform: scale(1, 1);
          color: var(--color-accent-fg);
        }
        55% {
          color: var(--color-fg-on-emphasis);
        }
        100% {
          transform: scaleX(1);
        }
      }
    }
  }

  .AppFrame-main {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
  }

  .AppFrame-header-wrapper {
    position: relative;
    overflow: visible; 
    height: min-content;

    .AppFrame-header {
      position: sticky;
      top: 0;
      z-index: 1;
    }
  }

  .AppFrame-header {
    flex: 0 0 auto;
  }

  .AppFrame-tray {
    overflow: hidden;
    flex: 0 0 auto;
    background: linear-gradient(to bottom, var(--color-border-default) -#{$spacer-3}, var(--color-canvas-inset) #{$spacer-2});

    @keyframes flash-tray--appear {
      from {
        opacity: 0;
        transform: translateY(-$spacer-4);
      }
      to {
        opacity: 1;
      }
    }

    @include breakpoint(md) {
      padding: $spacer-2 $spacer-3;
      border-bottom: $border-width $border-style var(--color-border-default);

      .Flash {
        animation: flash-tray--appear 160ms 80ms both cubic-bezier(0.33, 1, 0.68, 1);

        & + .Flash {
          margin-top: $spacer-2;
          animation-delay: 160ms;
        }
      }
    }

    &:empty {
      display: none;
    }

    // FIXME: use theme-high-contrast mixin
    @at-root :is([data-color-mode="light"][data-light-theme$='high_contrast'], [data-color-mode="dark"][data-dark-theme$='high_contrast']) & {
      background: var(--color-canvas-inset);
    }
  }

  .AppFrame-body {
    flex: 1 0;
    height: 100%;
  }

  .AppFrame-footer {
    border-top: $border-width $border-style var(--color-border-default);
    background: var(--color-canvas-inset);
    padding: $spacer-3;
  }
}