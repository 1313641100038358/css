.AppHeader {
  --AppHeader-bg: #F6F8FA; /* bg.subtle? */
  --AppHeader-bg: var(--color-canvas-inset);

  background: var(--AppHeader-bg);
  color: var(--color-fg-default);
  box-shadow: inset 0 calc(var(--primer-borderWidth-thin, 1px) * -1) var(--color-border-default);

  // AppHeader structure
  // ===================
  //
  // Here's the markup structure of AppHeader:
  //
  // 
  // .AppHeader
  // ├─ .AppHeader-globalBar
  // │  ├─ .AppHeader-globalBar-start
  // │  │  ├─ .AppHeader-logo
  // │  │  ├─ .AppHeader-context
  // │  │  │  ├─ .AppHeader-context-compact
  // │  │  │  ├─ .AppHeader-context-full
  // │  │  │  │  ├─ .AppHeader-context-item
  // │  ├─ .AppHeader-globalBar-end
  // │  │  ├─ .AppHeader-search
  // │  │  │  ├─ .AppHeader-search-whenNarrow
  // │  │  │  ├─ .AppHeader-search-whenRegular
  // │  │  │  │  ├─ .AppHeader-search-wrap
  // │  │  │  │  │  ├─ .AppHeader-search-label
  // │  │  │  │  │  ├─ .AppHeader-search-control
  // │  │  ├─ .AppHeader-actions
  // │  │  ├─ .AppHeader-user
  // ├─ .AppHeader-localBar


  // Global bar

  .AppHeader-globalBar {
    padding: var(--base-size-16, 16px);
    display: flex;
    gap: var(--base-size-12, 12px);

    .AppHeader-globalBar-start {
      flex: 1 1 auto;
      display: flex;
      gap: var(--base-size-8, 8px);
    }

    .AppHeader-globalBar-end {
      flex: 1 1 auto;
      display: flex;
      justify-content: flex-end;
      gap: var(--primer-controlStack-medium-gap-auto, 8px);

      @media (max-width: #{map-get($breakpoints, 'md') - 0.02px}) {
        flex-grow: 0;
      }
    }

    // #region [ logo + avatar ]

    .AppHeader-logo, .AppHeader-user {
      flex: 0 0 auto;
      display: grid;
      width: var(--base-size-32, 32px);
      height: var(--base-size-32, 32px);

      button, a {
        grid-area: 1 / 1;
        display: block;
        width: var(--base-size-32, 32px);
        height: var(--base-size-32, 32px);
      }

      button {
        background: transparent;
        padding: 0;
        border: none;
        border-radius: 6px;
        outline-offset: var(--primer-borderWidth-normal, 2px);
      }

      a {
        grid-area: 1 / 1;
        position: relative;
        overflow: hidden;
        text-indent: var(--base-size-128, 128px);
        color: transparent;

        @media (pointer: coarse) {
          &:after {
            // pull from minTouchTarget design token
            @include minTouchTarget(var(--primer-control-minTarget-coarse, 44px), var(--primer-control-minTarget-coarse, 44px));
          }
        }
      }
    }

    .AppHeader-logo svg {
      width: var(--base-size-32, 32px);
      height: var(--base-size-32, 32px);
    }

    .AppHeader-user {
      background: var(--color-neutral-muted);
      border-radius: 100%;
      position: relative;

      img {
        display: block;
        position: relative;
        width: 100%;
        height: 100%;
        border-radius: 100%;
      }

      &:before {
        pointer-events: none;
        content: "";
        display: block;
        position: absolute;
        z-index: 2;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        border-radius: 100%;
        box-shadow: inset 0 0 0 var(--primer-borderWidth-thin, 1px) var(--color-border-subtle);
      }
    }

    // #endregion [ logo + avatar ]

    // #region [ Context region ]

    // The context region is where the page title or the "breadcrumb" appears,
    // right after the logo. It has two modes, that change on
    // `base-breakpoint-small` breakpoint:
    // 
    // - compact: 
    //   Up to 2 levels of hierarchy are displayed, with a single anchor.
    //
    // - full:
    //   multiple levels can be shown, with individual anchors for each level.

    .AppHeader-context {
      flex: 1 1 auto;
      height: var(--base-size-32, 32px);
      min-width: 0;

      .AppHeader-context-compact {

        // Fixme: change to design token syntax when 
       // @custom-media --base-breakpoint-sm
        @media (min-width: #{map-get($breakpoints, 'sm')}) {
          display: none;
        }

        .AppHeader-context-compact-trigger {
          display: grid;
          color: inherit;
          height: 48px;
          margin-block: -8px;
          padding-block: 6px;
          padding-inline: var(--primer-control-medium-paddingInline-condensed, 8px);
          border-radius: 6px;
          cursor: pointer;
          appearance: none;
          border: 0;
          background-color: transparent;
          width: 100%;
          text-align: left;
          align-items: center;

          &:hover {
            background-color: var(--color-action-list-item-default-hover-bg);
          }
  
          &:active {
            background-color: var(--color-action-list-item-default-active-bg);
          }
        }

        .AppHeader-context-compact-lead {
          display: grid; // Todo: fix ellipsis
          grid-auto-flow: column;
          align-items: center;
          font-size: 12px;
          line-height: 16px; // Todo: Replace with design token, `caption` style
          color: var(--color-fg-muted);
          width: fit-content;

        }

        .AppHeader-context-compact-parentItem {
          display: inline;
          overflow: hidden;
          white-space: nowrap;
          text-overflow: ellipsis;
        }

        .AppHeader-context-compact-separator {
          white-space: nowrap;
        }

        .AppHeader-context-compact-mainItem {
          display: block;
          line-height: 20px; // Todo: replace with design token, `body-medium` style
          overflow: hidden;
          white-space: nowrap;
          text-overflow: ellipsis;
        }
      }

      .AppHeader-context-full {
        display: inline-flex;
        min-width: 0;
        max-width: 100%;

        @media (max-width: #{map-get($breakpoints, 'sm') - 0.02px}) {
          display: none;
      }

        ul, li {
          list-style: none;
        }
  
        ul {
          display: inline-grid;
          grid-auto-flow: column;
        }
        li {
          display: inline-grid;
          grid-auto-flow: column;
          align-items: center;
  
          &:not(:last-child):after {
            white-space: nowrap;
            content: "/";
            color: var(--color-fg-muted);
          }

          &:last-child {
            .AppHeader-context-item {
              font-weight: var(--base-text-weight-semibold, 600);
            }
          }
        }
      }

      .AppHeader-context-item {
        color: inherit;
        display: block;
        padding-inline: var(--primer-control-medium-paddingInline-condensed, 8px);
        padding-block: var(--primer-control-medium-paddingBlock, 6px);
        line-height: var(--primer-text-body-lineHeight-medium, calc(20 / 14));
        border-radius: var(--primer-borderRadius-medium, 6px);
        text-decoration: none !important;
        min-width: 1ch;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;

        &:hover {
          background: var(--color-action-list-item-default-hover-bg);
        }

        &:active {
          background: var(--color-action-list-item-default-active-bg);
        }
      }
    }

    // #endregion [ Context region ]

    // #region [ Search ]

    .AppHeader-search {
      display: flex;
      position: relative;
      flex: 1 1 auto;
      justify-content: flex-end;

      @media (min-width: #{map-get($breakpoints, 'md')}) {
        .AppHeader-search-whenNarrow {
          display: none;
        }
      }

      @media (max-width: #{map-get($breakpoints, 'md') - 0.02px}) {
        flex-grow: 0;
        .AppHeader-search-whenRegular {
          display: none;
        }
      }

      .AppHeader-search-whenRegular {
        flex: 1 1 auto;
        max-width: 24rem; /* 384px */
        min-width: 12rem; /* 192px */
      }

      .AppHeader-search-wrap {
        display: grid;

        &.AppHeader-search-wrap--hasTrailing {
          input[type="search"] {
            padding-inline-end: calc(var(--primer-control-medium-paddingInline-condensed, 8px) + var(--base-size-16, 16px) + var(--primer-control-medium-gap, 8px) - var(--primer-borderWidth-thin, 1px));
          }
        }
      }

      .AppHeader-search-label {
        grid-area: 1 / 1;
        display: block;
        font-weight: normal;
        color: var(--color-fg-subtle); // non-essential
        pointer-events: none;
        z-index: 1;
        padding-block: var(--primer-control-medium-paddingBlock);
        padding-inline: calc(var(--primer-control-medium-paddingInline-condensed) + var(--base-size-16) + var(--primer-control-medium-gap));
        line-height: var(--primer-text-body-lineHeight-medium, 20px);
        width: 100%;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;

        kbd {
          display: inline-grid;
          align-items: center;
          justify-content: center;
          background: transparent;
          border-radius: var(--primer-borderRadius-small);
          vertical-align: baseline;
          width: var(--base-size-12);
          height: var(--base-size-16);
          font-size: var(--primer-text-caption-size);
          line-height: var(--primer-text-caption-lineHeight);
          border: var(--primer-borderWidth-thin, 1px) solid var(--color-fg-subtle);
          color: inherit;
          padding: 0;
          box-shadow: none;
        }
      }

      .AppHeader-search-control {
        grid-area: 1 / 1;
        position: relative;
        z-index: 2;
      }

      .AppHeader-search-visual--leading {
        position: absolute;
        display: block;
        width: var(--base-size-16, 16px);
        height: var(--base-size-16, 16px);
        top: var(--base-size-8, 8px);
        left: var(--base-size-8, 8px);
        color: var(--color-fg-muted);
        pointer-events: none;

        svg {
          display: block !important;
        }
      }

      input[type="search"] {
        width: 100%;
        padding-block: calc(var(--primer-control-medium-paddingBlock, 6px) - var(--primer-borderWidth-thin, 1px));
        padding-inline-start: calc(var(--primer-control-medium-paddingInline-condensed, 8px) + var(--base-size-16, 16px) + var(--primer-control-medium-gap, 8px) - var(--primer-borderWidth-thin, 1px));
        padding-inline-end: var(--primer-control-medium-paddingInline-condensed, 8px);
        transition: none;

        &:placeholder-shown {
          background: transparent;
        }

        &:not(:placeholder-shown) {
          background: var(--color-canvas-default);
        }

        &::placeholder {
          opacity: 1;
          color: transparent;
        }

        &:focus {
          background: var(--color-canvas-default);

          &::placeholder {
            color: var(--color-fg-subtle);
          }

          &:-moz-placeholder {
            opacity: 1;
            color: var(--color-fg-subtle);
          }
        }
      }

      .AppHeader-search-action--trailing {
        display: grid;
        align-items: center;
        justify-content: center;
        position: absolute;
        top: var(--base-size-4, 4px);
        right: var(--base-size-4, 4px);
        z-index: 4;
        width: var(--primer-control-xsmall-size, 24px);
        height: var(--primer-control-xsmall-size, 24px);
        padding: 0;
        border: none;
        border-radius: var(--primer-borderRadius-small);
        background: transparent;
        color: var(--color-fg-muted);

        &:hover {
          background: var(--color-action-list-item-default-hover-bg);
        }

        &:active {
          background: var(--color-action-list-item-default-active-bg);
        }

        &:before {
          content: "";
          display: block;
          position: absolute;
          top: calc((var(--primer-control-xsmall-size) - var(--base-size-16)) / 2);
          left: calc(var(--base-size-4, 4px) * -1);
          width: var(--primer-borderWidth-thin);
          height: var(--base-size-16);
          background: var(--color-border-default);
        }

        &:after {
          @include minTouchTarget(var(--primer-control-medium-size), var(--primer-control-medium-size));

          @media (pointer: coarse) {
            min-width: var(--primer-control-minTarget-coarse);
            min-height: var(--primer-control-minTarget-coarse);
          }
        }

        svg {
          color: inherit;
        }
      }
    }
    // #endregion [ Search ] 

    // #region [ Actions ]

    .AppHeader-divider {
      height: var(--base-size-20, 20px);
      width: var(--primer-borderWidth-thin, 1px);
      height: var(--base-size-20, 20px);
      background: var(--color-border-default);
      margin: calc((var(--primer-control-medium-size) - var(--base-size-20)) / 2) 0;
    }

    .AppHeader-actions {
      display: grid;
      grid-auto-flow: column;
      gap: var(--primer-controlStack-medium-gap-auto, 8px);

      &:before {
        content: "";
        display: block;
        height: var(--base-size-20, 20px);
        width: var(--primer-borderWidth-thin, 1px);
        height: var(--base-size-20, 20px);
        background: var(--color-border-default);
        margin-block: calc((var(--primer-control-medium-size) - var(--base-size-20)) / 2);

        @media (pointer: fine) {
          margin-inline: var(--base-size-4, 4px);
        }
      }

      // Hide actions on base-breakpoint-small	 (444px)
      
      @media (max-width: #{map-get($breakpoints, 'sm') - 0.02px}) {
        display: none;
      }
    }

    // #endregion [ Actions ]

  }

  // Local bar

  .AppHeader-localBar {
    padding: 0 var(--base-size-16, 16px);
  }

  // AppHeader items

  .AppHeader-item {
    flex: 0 0 auto;
    background: lightpink;
  }

  .AppHeader-item--full {
    flex-grow: 1;
  }

  .AppHeader-button {
    position: relative;
    display: grid;
    width: var(--base-size-32);
    height: var(--base-size-32);
    border: var(--primer-borderWidth-thin, 1px) solid var(--color-border-default);
    border-radius: var(--primer-borderRadius-medium, 6px);
    color: var(--color-fg-muted);
    background: transparent;
    align-items: center;
    justify-content: center;

    svg {
      display: block !important;
      color: inherit !important;
      width: var(--base-size-16);
      height: var(--base-size-16);
    }

    &:hover {
      background: var(--color-action-list-item-default-hover-bg);
    }

    &:active {
      background: var(--color-action-list-item-default-active-bg);
    }

    @media (pointer: coarse) {
      &:after {
        // pull from minTouchTarget design token
        @include minTouchTarget(var(--primer-control-minTarget-coarse, 44px), var(--primer-control-minTarget-coarse, 44px));
      }
    }

    &.AppHeader-button--hasIndicator:before {
      position: absolute;
      content: "";
      display: block;
      top: -2px;
      right: -2px;
      z-index: 2;
      background: var(--color-accent-fg);
      border-radius: 100%;
      width: 8px;
      height: 8px;
      box-shadow: 0 0 0 2px var(--AppHeader-bg);
    }
  }
}