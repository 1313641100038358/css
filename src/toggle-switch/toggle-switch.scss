.ToggleSwitch {
  align-items: center;
  display: inline-flex;
  flex-direction: row;

  &:hover {
    .ToggleSwitch--knob {
      background-color: var(--color-btn-hover-bg);
    }
  }

  &:active {
    .ToggleSwitch--knob {
      background-color: var(--color-btn-active-bg);
    }
  }
}

.ToggleSwitch--switch {
  position: relative;
  display: block;
  width: 64px;
  height: 32px;
  padding: 0;
  text-decoration: none;
  cursor: pointer;
  user-select: none;
  background-color: var(--color-switch-track-bg);
  border-color: var(--color-switch-track-border);
  border-style: $border-style;
  border-width: $border-width;
  border-radius: $border-radius;
  outline-offset: 2px;
  transition-timing-function: cubic-bezier(0.5, 1, 0.89, 1);
  transition-duration: 80ms;
  transition-property: background-color, border-color;
  appearance: none;

  @media (pointer: coarse) {
    &::before {
      position: absolute;
      top: 50%;
      right: 0;
      left: 0;
      min-height: 44px;
      content: '';
      transform: translateY(-50%);
    }
  }

  @media (prefers-reduced-motion) {
    transition: none;

    * {
      transition: none;
    }
  }

  &::after {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    box-sizing: border-box;
    content: '';
    border-radius: $border-radius;
  }
}

.ToggleSwitch--switch[aria-checked='true'][aria-disabled='true'] {
  background-color: var(--color-canvas-subtle);
  border-color: var(--color-border-subtle);

  &:hover,
  &:active {
    background-color: var(--color-canvas-subtle);

    // This is the most straightforward way of setting the knob's styles when the
    // switch is both checked and disabled.

    // stylelint-disable-next-line selector-max-specificity
    .ToggleSwitch--knob {
      background-color: var(--color-switch-knob-checked-disabled-bg);
    }
  }

  .ToggleSwitch--knob {
    background-color: var(--color-switch-knob-checked-disabled-bg);
  }
}

.ToggleSwitch--switch[aria-checked='true'] {
  background-color: var(--color-switch-track-checked-bg);
  border-color: var(--color-switch-track-checked-border);

  &:hover {
    background-color: var(--color-switch-track-checked-hover-bg);
  }

  &:active {
    background-color: var(--color-switch-track-checked-active-bg);
  }

  .ToggleSwitch--knob {
    background-color: var(--color-switch-knob-checked-bg);
    border: 0;
    transform: translateX(calc(100% + 1px));
  }

  .ToggleSwitch--lineIcon {
    transform: translateX(0%);
  }

  .ToggleSwitch--circleIcon {
    transform: translateX(100%);
  }
}

.ToggleSwitch--switch[aria-disabled='true'] {
  cursor: not-allowed;
  background-color: var(--color-canvas-subtle);
  border-color: var(--color-border-subtle);
  transition-property: none;

  &:hover,
  &:active {
    .ToggleSwitch--knob {
      background-color: var(--color-btn-bg);
    }
  }

  .ToggleSwitch--knob {
    border-color: var(--color-border-default);
    box-shadow: none;

    &:hover,
    &:active {
      background-color: var(--color-btn-bg);
    }
  }

  .ToggleSwitch--lineIcon {
    color: var(--color-fg-subtle);
  }

  .ToggleSwitch--circleIcon {
    color: var(--color-fg-subtle);
  }

  .ToggleSwitch--labels {
    color: var(--color-fg-muted);
  }
}

.ToggleSwitch--bg {
  display: flex;
  align-items: center;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.ToggleSwitch--lineIcon {
  line-height: 0;
  color: var(--color-accent-fg);
  transition-duration: 80ms;
  transition-property: transform;
  transform: translateX(-100%);
  flex-shrink: 0;
  flex-grow: 1;
  flex-basis: 50%;
}

.ToggleSwitch--circleIcon {
  line-height: 0;
  color: var(--color-fg-default);
  transition-duration: 80ms;
  transition-property: transform;
  transform: translateX(0);
  flex-shrink: 0;
  flex-grow: 1;
  flex-basis: 50%;
}

.ToggleSwitch--knob {
  position: absolute;
  top: -1px;
  bottom: -1px;
  z-index: 1;
  width: 50%;
  background-color: var(--color-btn-bg);
  border-color: var(--color-switch-track-border);
  border-style: $border-style;
  border-width: $border-width;
  border-radius: $border-radius;
  box-shadow: var(--color-shadow-medium), var(--color-btn-inset-shadow);
  transition-timing-function: cubic-bezier(0.5, 1, 0.89, 1);
  transition-duration: 80ms;
  transition-property: transform;
  transform: translateX(-1px);

  @media (prefers-reduced-motion) {
    transition: none;
  }
}

.ToggleSwitch--labels {
  position: relative;
  margin-right: $spacer-2;
  margin-left: $spacer-2;
  font-size: $body-font-size;
  line-height: $body-line-height;
  color: var(--color-fg-default);
}

.ToggleSwitch--small {
  .ToggleSwitch--labels {
    font-size: $font-size-small;
  }

  .ToggleSwitch--switch {
    width: 48px;
    height: 24px;
  }
}

.ToggleSwitch--onLabel {
  height: 0;
  visibility: hidden;
}

.ToggleSwitch--offLabel {
  height: auto;
  visibility: visible;
}
